{"version":3,"file":"rescoped-provider-factory.mjs","sources":["../../../../libs/provider/factory/src/provider-token.factory.ts","../../../../libs/provider/factory/rescoped-provider-factory.ts"],"sourcesContent":["import {\n  HostDecorator,\n  InjectionToken,\n  OptionalDecorator,\n  Provider,\n  SelfDecorator,\n  SkipSelfDecorator,\n} from '@angular/core';\n\n/**\n * @todo:\n * InjectionTokenName => toUpperCase() + TypeScript`a UpperCase Type\n * InjectionTokenName => camelCase to underscoreCase\n **/\n\ntype ProviderTokenMap<TokenName extends string, TokenValue, ExtName extends string> = {\n  [_ in TokenName as `${string & TokenName}_${string & ExtName}`]: TokenValue;\n};\n\n// prettier-ignore\ntype ProviderTokenFactoryReturns<TokenName extends string, TokenValue> =\n  ProviderTokenMap<TokenName, InjectionToken<TokenValue>,  'TOKEN'> &\n  ProviderTokenMap<TokenName, Provider,'PROVIDER'>;\n\nexport type ConstructorDecorator =\n  | SelfDecorator\n  | SkipSelfDecorator\n  | OptionalDecorator\n  | HostDecorator;\n\nexport const providerTokenFactory = <TokenName extends string, TokenValue>(\n  tokenName: TokenName,\n  tokenValue: TokenValue,\n  decorators: ConstructorDecorator[] = [],\n): ProviderTokenFactoryReturns<TokenName, TokenValue> => {\n  const decoratorInstances = decorators.map(decorator => new decorator());\n  const injectionToken = new InjectionToken<TokenValue>(tokenName);\n\n  const provider: Provider = {\n    provide: injectionToken,\n    deps: [[...decoratorInstances, tokenValue]],\n    useFactory: function useFactory(instance: TokenValue) {\n      return instance;\n    },\n  };\n\n  return {\n    [`${tokenName}_TOKEN`]: injectionToken,\n    [`${tokenName}_PROVIDER`]: provider,\n  } as ProviderTokenFactoryReturns<TokenName, TokenValue>;\n};\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;AA8BO,MAAM,oBAAoB,GAAG,CAClC,SAAoB,EACpB,UAAsB,EACtB,UAAA,GAAqC,EAAE,KACe;AACtD,IAAA,MAAM,kBAAkB,GAAG,UAAU,CAAC,GAAG,CAAC,SAAS,IAAI,IAAI,SAAS,EAAE,CAAC,CAAC;AACxE,IAAA,MAAM,cAAc,GAAG,IAAI,cAAc,CAAa,SAAS,CAAC,CAAC;AAEjE,IAAA,MAAM,QAAQ,GAAa;AACzB,QAAA,OAAO,EAAE,cAAc;QACvB,IAAI,EAAE,CAAC,CAAC,GAAG,kBAAkB,EAAE,UAAU,CAAC,CAAC;AAC3C,QAAA,UAAU,EAAE,SAAS,UAAU,CAAC,QAAoB,EAAA;AAClD,YAAA,OAAO,QAAQ,CAAC;SACjB;KACF,CAAC;IAEF,OAAO;AACL,QAAA,CAAC,CAAG,EAAA,SAAS,CAAQ,MAAA,CAAA,GAAG,cAAc;AACtC,QAAA,CAAC,CAAG,EAAA,SAAS,CAAW,SAAA,CAAA,GAAG,QAAQ;KACkB,CAAC;AAC1D;;AClDA;;AAEG;;;;"}