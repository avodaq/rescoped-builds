{"version":3,"file":"rescoped-services-theme-store.mjs","sources":["../../../../libs/services/theme-store/src/theme-store.models.ts","../../../../libs/services/theme-store/src/theme-store.service.ts","../../../../libs/services/theme-store/rescoped-services-theme-store.ts"],"sourcesContent":["export const THEME = 'dark';\n\nexport interface ThemeState {\n  active: boolean;\n  theme: typeof THEME;\n}\n\nexport const defaultThemeState: ThemeState = {\n  active: false,\n  theme: THEME,\n};\n\nexport const LS_THEME_KEY = '@rescoped/theme-switcher';\n","import { Inject, Injectable } from '@angular/core';\nimport { ComponentStore } from '@ngrx/component-store';\nimport { DOCUMENT } from '@angular/common';\nimport { exhaustMap, map, mapTo, takeUntil, tap } from 'rxjs/operators';\nimport { StorageMap } from '@ngx-pwa/local-storage';\nimport { Observable, Subject } from 'rxjs';\nimport { defaultThemeState, LS_THEME_KEY, ThemeState } from './theme-store.models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ThemeStore extends ComponentStore<ThemeState> {\n  private readonly _classList = this._doc.body.classList;\n  private readonly _unsub$ = new Subject<void>();\n\n  /** Active selected stream state */\n  readonly active$ = this.select(({ active }) => active);\n\n  /** Storage stream which holds the ThemeState */\n  readonly _storage$ = this._storage\n    .get(LS_THEME_KEY)\n    .pipe(map(value => value ?? defaultThemeState)) as unknown as Observable<ThemeState>;\n\n  constructor(\n    private readonly _storage: StorageMap,\n    @Inject(DOCUMENT) private readonly _doc: Document,\n  ) {\n    // support APP_INITIALIZER work with observable\n    // https://github.com/angular/angular/pull/33222\n    super(defaultThemeState);\n    this._init();\n  }\n\n  /** Should be used for setting the theme state for true or false */\n  readonly setActive = this.effect<ThemeState['active']>(themeActive$ =>\n    themeActive$.pipe(\n      exhaustMap(active => this._setStorage({ active, theme: 'dark' })),\n      tap(state => this._set(state)),\n    ),\n  );\n\n  private _init() {\n    this._storage$.pipe(takeUntil(this._unsub$)).subscribe(state => this._set(state));\n  }\n\n  /** Sets theme and patches state */\n  private _set(state: ThemeState) {\n    this._setTheme(state);\n    this.patchState(state);\n  }\n\n  /** Adds or removes the theme css class to body node */\n  private _setTheme(state: ThemeState) {\n    state.active ? this._classList.add('dark') : this._classList.remove('dark');\n  }\n\n  /** Writes ThemeState into storage */\n  private _setStorage(state: ThemeState) {\n    return this._storage.set(LS_THEME_KEY, state).pipe(mapTo(state));\n  }\n\n  /** Clears the storage and removes the .dark class */\n  clear() {\n    const storage$ = this._storage.clear().pipe(tap(() => this._classList.remove('dark')));\n    this._unsub$.next();\n    this._unsub$.complete();\n\n    return storage$.toPromise();\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}