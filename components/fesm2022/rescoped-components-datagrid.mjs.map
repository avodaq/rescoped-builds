{"version":3,"file":"rescoped-components-datagrid.mjs","sources":["../../../../libs/components/datagrid/src/cdk-datagrid-batch.validation.ts","../../../../libs/components/datagrid/src/cdk-datagrid.validators.ts","../../../../libs/components/datagrid/src/cdk-datagrid-data.manager.ts","../../../../libs/components/datagrid/src/cdk-datagrid.utils.ts","../../../../libs/components/datagrid/src/cdk-datagrid-rule.manager.ts","../../../../libs/components/datagrid/src/cdk-datagrid-form.manager.ts","../../../../libs/components/datagrid/src/cdk-datagrid-storage.directive.ts","../../../../libs/components/datagrid/src/cdk-datagrid-storage.factory.ts","../../../../libs/components/datagrid/src/cdk-datagrid-form-control.directive.ts","../../../../libs/components/datagrid/src/cdk-datagrid-edit.manager.ts","../../../../libs/components/datagrid/src/cdk-datagrid-edit.directive.ts","../../../../libs/components/datagrid/src/cdk-datagrid-common.directive.ts","../../../../libs/components/datagrid/src/cdk-datagrid-common.factory.ts","../../../../libs/components/datagrid/src/cdk-datagrid-edit.factory.ts","../../../../libs/components/datagrid/src/cdk-datagrid-form-control.factory.ts","../../../../libs/components/datagrid/src/mat-datagrid-focus.directives.ts","../../../../libs/components/datagrid/src/mat-datagrid-input.ts","../../../../libs/components/datagrid/src/cdk-datagrid-date.adapter.ts","../../../../libs/components/datagrid/src/cdk-datagrid.provider.ts","../../../../libs/components/datagrid/src/cdk-datagrid-collapse.ts","../../../../libs/components/datagrid/src/mat-datagrid-datepicker.ts","../../../../libs/components/datagrid/src/cdk-datagrid.directive.ts","../../../../libs/components/datagrid/src/mat-datagrid.directive.ts","../../../../libs/components/datagrid/src/cdk-datagrid-connect-with.directive.ts","../../../../libs/components/datagrid/src/mat-datagrid-combobox.ts","../../../../libs/components/datagrid/src/mat-datagrid-collapse.ts","../../../../libs/components/datagrid/src/mat-datagrid-row.directive.ts","../../../../libs/components/datagrid/src/mat-datagrid-empty-cell.ts","../../../../libs/components/datagrid/src/type-safe-mat-cell-def.directive.ts","../../../../libs/components/datagrid/rescoped-components-datagrid.ts"],"sourcesContent":["import { AsyncValidatorFn } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nexport interface Validation {\n  index: number;\n  field: string;\n  validationCode: string;\n  validationMessage: string;\n  validationType?: 'error' | 'warning';\n}\n\nexport function batchValidatorFactory(\n  validations: Observable<Validation[]>,\n  field: Validation['field'],\n  index: Validation['index'],\n): AsyncValidatorFn {\n  return () =>\n    validations.pipe(\n      map(\n        validations =>\n          validations?.find(validation => {\n            return validation.field === field && validation.index === index;\n          }),\n      ),\n      map(validation => (validation ? validation : null)),\n      take(1),\n    );\n}\n","import {\n  AbstractControl,\n  AsyncValidatorFn,\n  ValidationErrors,\n  ValidatorFn,\n  Validators as _Validators,\n} from '@angular/forms';\n\nexport interface FieldValidationErrors {\n  validationMessage?: string;\n  validationCode?: string;\n  validationType?: 'error' | 'warning';\n}\n\nexport const defaultValidationError: FieldValidationErrors = {\n  validationMessage: 'unknown error',\n  validationCode: 'DEFAULT_UNKNOWN_ERROR',\n};\n\nexport const mergeValidationErrors = (\n  validationError1: ValidationErrors | null,\n  validationError2: FieldValidationErrors = defaultValidationError,\n): FieldValidationErrors | null => {\n  return validationError1 ? { ...validationError1, ...validationError2 } : validationError1;\n};\n\nexport class Validators {\n  static min(min: number, validationError: FieldValidationErrors = {}): ValidatorFn {\n    return (control: AbstractControl) =>\n      mergeValidationErrors(_Validators.min(min)(control), validationError);\n  }\n\n  static max(max: number, validationError: FieldValidationErrors = {}): ValidatorFn {\n    return (control: AbstractControl) =>\n      mergeValidationErrors(_Validators.max(max)(control), validationError);\n  }\n\n  static required(validationError: FieldValidationErrors = {}): ValidatorFn {\n    return (control: AbstractControl) =>\n      mergeValidationErrors(_Validators.required(control), validationError);\n  }\n\n  static requiredTrue(validationError: FieldValidationErrors = {}): ValidatorFn {\n    return (control: AbstractControl) =>\n      mergeValidationErrors(_Validators.requiredTrue(control), validationError);\n  }\n\n  static email(validationError: FieldValidationErrors = {}): ValidatorFn {\n    return (control: AbstractControl) =>\n      mergeValidationErrors(_Validators.email(control), validationError);\n  }\n\n  static minLength(minLength: number, validationError: FieldValidationErrors = {}): ValidatorFn {\n    return (control: AbstractControl) =>\n      mergeValidationErrors(_Validators.minLength(minLength)(control), validationError);\n  }\n\n  static maxLength(maxLength: number, validationError: FieldValidationErrors = {}): ValidatorFn {\n    return (control: AbstractControl) =>\n      mergeValidationErrors(_Validators.maxLength(maxLength)(control), validationError);\n  }\n\n  static pattern(\n    pattern: string | RegExp,\n    validationError: FieldValidationErrors = {},\n  ): ValidatorFn {\n    return (control: AbstractControl) =>\n      mergeValidationErrors(_Validators.pattern(pattern)(control), validationError);\n  }\n\n  static nullValidator(): ValidatorFn {\n    return (control: AbstractControl) =>\n      mergeValidationErrors(_Validators.nullValidator(control), {});\n  }\n\n  static nullAsyncValidator(): AsyncValidatorFn {\n    return _control => {\n      return new Promise<null>(resolve => {\n        resolve(null);\n        // null validators does nothing!\n        // so no control handling needed!\n        // control.updateValueAndValidity();\n      });\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { getItemPayload, setItemPayload } from './cdk-datagrid.utils';\nimport { Subject } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { ComponentType } from '@angular/cdk/overlay';\nimport { DatagridValidation } from './cdk-datagrid-form-control.directive';\nimport { MatTableDataSource } from '@angular/material/table';\n\nexport const itemPayloadDefault: ItemPayload<object> = {\n  id: '',\n  index: 0,\n  active: true,\n  groupId: null,\n  parent: false,\n  collapsed: false,\n  selected: false,\n  filtered: false,\n  actionType: 'row-single',\n  rules: null,\n};\n\nexport interface HiddenItemPayload<Item> {\n  _$hiddenItemPayload: ItemPayload<Item>;\n}\n\nexport enum ItemActionIndex {\n  rowGlobal = -99,\n  rowGroup,\n  rowSingle,\n  rowSearchReplace,\n}\n\nexport type ItemActionType =\n  | 'row-global'\n  | 'row-group'\n  | 'row-single'\n  | 'row-search-replace'\n  | 'row-filter'\n  | 'row-empty';\n\nexport interface RuleTypes {\n  validate?: boolean;\n  // @todo: have to be implemented in order to pass validation while data aggregation\n  validators?: DatagridValidation;\n  disable?: boolean;\n  render?: boolean;\n  placeholder?: string;\n  action?: {\n    componentType?: ComponentType<unknown>;\n    componentPosition?: 'before' | 'after' | 'override';\n    cond?: boolean | (() => boolean);\n    data?: unknown;\n    transform?: (item: any, key: any, value: any) => any;\n  };\n}\n\nexport interface ItemRules<Item> extends RuleTypes {\n  overrides?: {\n    [itemKeys in keyof Item]?: RuleTypes;\n  };\n}\n\nexport type GlobalRules<Item, _ItemActionType extends ItemActionType = ItemActionType> = {\n  [actionType in _ItemActionType]?: ItemRules<Item>;\n};\n\nexport interface ItemPayload<Item> {\n  id: string; // https://github.com/ai/nanoid\n  index: number;\n  active: boolean;\n  parent: boolean;\n  collapsed: boolean | null;\n  groupId: number | null;\n  selected: boolean;\n  filtered: boolean;\n  actionType: ItemActionType;\n  rules: ItemRules<Item> | null;\n}\n\nexport type ItemSlotId = number | string;\nexport type _ItemPayload<Item> = ItemPayload<Item>;\nexport type ItemSlot<Item> = Map<ItemSlotId, Item>;\nexport type _AffectedPayload<Item> = (payload: ItemPayload<Item>) => void;\nexport type GroupId = ItemPayload<object>['groupId'];\n\nexport type ValueChange = {\n  key: string;\n  value: string;\n  actionType: ItemActionType;\n  groupId: GroupId;\n};\n\n@Injectable()\nexport class CdkDatagridDataManager<\n  Item,\n  ItemKey extends keyof Item = keyof Item,\n  ItemPayload extends _ItemPayload<Item> = _ItemPayload<Item>,\n  AffectedPayload extends _AffectedPayload<Item> = _AffectedPayload<Item>,\n> {\n  readonly #valueChange$ = new Subject<ValueChange | null>();\n  readonly valueChange$ = this.#valueChange$.pipe(startWith(null));\n\n  readonly #dataTableSlot: ItemSlot<Item | ItemPayload> = new Map<ItemSlotId, Item>();\n\n  countSingleItems = 0;\n  countGroupItems = 0;\n\n  #dataSource!: MatTableDataSource<Item>;\n\n  #originalData: Item[] = [];\n\n  set dataSource(dataSource: MatTableDataSource<Item>) {\n    this.#dataSource = dataSource;\n    this.#originalData = dataSource.data.map((item, index) =>\n      this.#countActionType(setItemPayload(item, { index })),\n    );\n  }\n\n  get data(): Item[] {\n    return this.#originalData;\n  }\n\n  setValueChange(value: ValueChange | null) {\n    this.#valueChange$.next(value);\n  }\n\n  splice(start: number, deleteCount = 0, items: Item[]) {\n    this.#originalData.splice(start, deleteCount, ...items);\n    this.#originalData = this.cloneItemAll();\n    this.#dataSource.data = this.#originalData;\n  }\n\n  delete(item: Item, includeChildren = false) {\n    const payload = getItemPayload(item);\n    const _index = payload.index;\n    const groupId = payload.groupId;\n    const parent = payload.parent;\n\n    this.#originalData = this.#originalData.filter(item => {\n      const toNotDeleteItem =\n        (!parent && getItemPayload(item).index !== _index) ||\n        (includeChildren && parent && getItemPayload(item).groupId !== groupId);\n\n      if (!toNotDeleteItem && typeof getItemPayload(item).groupId !== 'number') {\n        console.error('ItemPayload.groupId is missing when includeChildren on', item);\n        throw new Error('ItemPayload.groupId is required and must be a number!');\n      }\n\n      return toNotDeleteItem;\n    });\n\n    this.#originalData = this.cloneItemAll();\n    this.#dataSource.data = this.#originalData;\n  }\n  /**\n   * This method is useful when you want to add dynamic a runtime an item to the table.\n   */\n  addDataSlotItem(itemPayload: Partial<ItemPayload>, item?: Item) {\n    const { id, actionType, active } = itemPayload;\n\n    if (!id) throw new Error('id is required');\n    if (!actionType) throw new Error('actionType is required');\n\n    let _item = this.getDataTableItem(id);\n    if (!_item) {\n      _item = setItemPayload(_item ?? (item || ({} as Item)), itemPayload);\n      this.#dataTableSlot.set(id, _item);\n    } else {\n      _item = setItemPayload(_item, { active });\n    }\n\n    if (active) {\n      this.#originalData.splice(0, 0, _item);\n    } else if (!active) {\n      const index = this.#dataSource.data.indexOf(_item);\n      this.#originalData.splice(index, 1);\n    }\n\n    this.#dataSource.data = this.#originalData.filter(\n      item => !getItemPayload(item).collapsed || getItemPayload(item).parent,\n    );\n  }\n\n  getDataTableItem(id: ItemSlotId) {\n    return this.#dataTableSlot.get(id) as Item;\n  }\n\n  getChildItems(item: Item) {\n    const { groupId } = getItemPayload(item);\n    return this.#originalData.filter(item => {\n      const payload = getItemPayload(item);\n      return (\n        payload.groupId === groupId &&\n        payload.parent === false &&\n        payload.actionType === 'row-single'\n      );\n    });\n  }\n\n  getSingleItems() {\n    return this.#originalData.filter(item => {\n      const { actionType } = getItemPayload(item);\n      return actionType === 'row-single';\n    });\n  }\n\n  getParentItem(item: Item) {\n    const { groupId } = getItemPayload(item);\n    return this.#originalData.find(item => {\n      const payload = getItemPayload(item);\n      return payload.groupId === groupId && payload.parent === true;\n    });\n  }\n\n  getGroupChildren(groupId: GroupId) {\n    return this.#originalData.filter(item => {\n      const { groupId: _groupId, parent, actionType } = getItemPayload(item);\n      return _groupId === groupId && !parent && actionType === 'row-single';\n    });\n  }\n\n  setValue<ItemKey extends keyof Item>(\n    key: ItemKey,\n    value: Item[ItemKey],\n    item: Item,\n    affectedItemsFn?: AffectedPayload,\n  ) {\n    const { actionType, groupId } = getItemPayload(item);\n\n    if (actionType === 'row-single') {\n      this.setSingleValue(item, key, value, affectedItemsFn);\n    } else if (actionType === 'row-group' && typeof groupId === 'number' && groupId >= 0) {\n      this.setGroupValues(key, value, groupId, affectedItemsFn);\n    } else if (actionType === 'row-global') {\n      this.setGlobalValues(key, value, affectedItemsFn);\n    } else {\n      throw new Error(`Unknown actionType: \"${actionType}\" or groupId: \"${groupId}\"`);\n    }\n\n    const valueChange = { key, value, actionType, groupId } as unknown as ValueChange;\n    this.#valueChange$.next(valueChange);\n  }\n\n  setItemByKeyValue<ItemKey extends keyof Item>(item: Item, key: ItemKey, value: Item[ItemKey]) {\n    if (!Object.getOwnPropertyDescriptor(item, key)) {\n      throw new Error(`Invalid key: ${key.toString()} or no default item object is provided`);\n    }\n    item[key] = value;\n  }\n  setSingleValue<ItemKey extends keyof Item>(\n    item: Item,\n    key: ItemKey,\n    value: Item[ItemKey],\n    affectedItems?: AffectedPayload,\n  ) {\n    this.setItemByKeyValue(item, key, value);\n    affectedItems?.(getItemPayload(item));\n  }\n\n  setGroupValues<ItemKey extends keyof Item>(\n    key: ItemKey,\n    value: Item[ItemKey],\n    groupId: GroupId,\n    affectedItems?: AffectedPayload,\n  ) {\n    this.#originalData.forEach(item => {\n      const itemPayload = getItemPayload(item);\n      if (itemPayload.groupId === groupId) {\n        this.setItemByKeyValue(item, key, value);\n        affectedItems?.(itemPayload);\n      }\n    });\n  }\n\n  setGlobalValues<ItemKey extends keyof Item>(\n    key: ItemKey,\n    value: Item[ItemKey],\n    affectedItems?: AffectedPayload,\n  ) {\n    this.#originalData.forEach(Item => {\n      const itemPayload = getItemPayload(Item);\n      this.setItemByKeyValue(Item, key, value);\n      affectedItems?.(itemPayload);\n    });\n  }\n\n  toggleGroup(itemPayload: ItemPayload) {\n    this.#dataSource.data = this.#originalData.filter(item => {\n      const _item = getItemPayload(item);\n      if (itemPayload.groupId === _item.groupId) {\n        item = setItemPayload(item, { collapsed: !_item.collapsed });\n      }\n      return !getItemPayload(item).collapsed || getItemPayload(item).parent;\n    });\n  }\n\n  getItemByIndex(index: number) {\n    const item = this.#originalData[index];\n    if (!item) {\n      throw new Error(`\n        Item with index \"${index}\" not found.\n        Hint: update the index value if you have added or removed items!\n      `);\n    }\n\n    return this.#originalData[index];\n  }\n\n  getParentItemByGroupId(groupId: number) {\n    const item = this.#originalData.find(item => {\n      const _item = getItemPayload(item);\n      return _item.groupId === groupId && _item.parent;\n    });\n\n    if (!item) {\n      throw new Error(`Item with groupId \"${groupId}\" not found`);\n    }\n\n    return item;\n  }\n\n  cloneItemAll(itemPayload: Partial<ItemPayload> = {}) {\n    return this.#originalData.map((item, index) =>\n      this.cloneItem(item, { ...itemPayload, index } as Partial<ItemPayload>),\n    );\n  }\n\n  cloneItem(item: Item, itemPayload: Partial<ItemPayload> = {}) {\n    const overrides = getItemPayload(item)?.rules?.overrides;\n    const keyMaps: Map<\n      ItemKey,\n      {\n        component?: ComponentType<unknown>;\n        cond?: (() => boolean) | boolean;\n        transform?: (item: any, key: any, value: any) => any;\n      }\n    > = new Map();\n\n    if (typeof overrides === 'object') {\n      const overridesKeys = <ItemKey[]>Object.keys(overrides);\n      overridesKeys.forEach(key => {\n        const action = getItemPayload(item)?.rules?.overrides?.[key]?.action;\n\n        // action.componentType\n        const component = action?.componentType;\n        if (component) {\n          keyMaps.set(key, { ...keyMaps.get(key), component });\n          action.componentType = undefined;\n        }\n\n        // action.cond\n        const cond = action?.cond;\n        if (cond) {\n          keyMaps.set(key, { ...keyMaps.get(key), cond });\n          action.cond = undefined;\n        }\n\n        // action.transform\n        const transform = action?.transform;\n        if (transform) {\n          keyMaps.set(key, { ...keyMaps.get(key), transform });\n          action.transform = undefined;\n        }\n      });\n    }\n\n    item = structuredClone(item);\n\n    keyMaps.forEach((componentType, key) => {\n      const action = getItemPayload(item)?.rules?.overrides?.[key]?.action;\n      if (action && componentType.component) {\n        action.componentType = componentType.component;\n      }\n      if (action && componentType.cond) {\n        action.cond = componentType.cond;\n      }\n      if (action && componentType.transform) {\n        action.transform = componentType.transform;\n      }\n    });\n\n    return setItemPayload(item, itemPayload);\n  }\n\n  #countActionType(item: Item) {\n    const actionType = getItemPayload(item).actionType;\n    actionType === 'row-single' ? this.countSingleItems++ : null;\n    actionType === 'row-group' ? this.countGroupItems++ : null;\n    return item;\n  }\n\n  destroy() {\n    this.#dataSource.data = [];\n    this.#originalData = [];\n  }\n}\n","import { HiddenItemPayload, ItemPayload, itemPayloadDefault } from './cdk-datagrid-data.manager';\n\n/**\n * experimental\n * @param itemDefault\n * @param itemPayloadDefault\n */\nexport const itemPayloadFactory =\n  <Item>(itemDefault: Item, itemPayloadDefault: Partial<ItemPayload<Item>> = {}) =>\n  (item: Item, itemPayload: Partial<ItemPayload<Item>> = {}) => {\n    return setItemPayload<Item>(\n      // item // works!\n      { ...itemDefault, ...item }, // does not work!\n      Object.keys(itemPayloadDefault).length ? itemPayloadDefault : itemPayload,\n    );\n  };\n\n/**\n * setItemPayload sets an itemPayload on item in hidden-type-mode.\n * This means there is no direct access to itemPayload on returned item with TypeScript.\n * The advantage of this approach is that you can put implementation details\n * at type level in a hidden-type-mode so that it allows carry payload with an item.\n *\n * To get the itemPayload you should use getItemPayloadValue or getItemPayload.\n */\n// prettier-ignore\nexport const setItemPayload = <\n  Item,\n>(item: Item, itemPayload: Partial<ItemPayload<Item>> = {}): Item => {\n  const _item = item as Item & HiddenItemPayload<Item>;\n\n  _item._$hiddenItemPayload = Object.assign(\n    { ...itemPayloadDefault } as ItemPayload<Item>,\n    { ..._item?._$hiddenItemPayload ?? {} } as ItemPayload<Item>,\n    { ...itemPayload } as ItemPayload<Item>,\n  );\n\n  return _item as Item\n};\n\n/**\n * getItemPayloadValue returns a specific itemPayloadValue of an item by given key.\n */\n// prettier-ignore\nexport const getItemPayloadValue = <\n  Item,\n  ItemPayloadKeys extends keyof ItemPayload<Item>,\n  ItemPayloadValue extends ItemPayload<Item>[ItemPayloadKeys],\n>(item: Item, key: ItemPayloadKeys): ItemPayloadValue => {\n  const _item = item as Item & HiddenItemPayload<Item>;\n  if (!_item?._$hiddenItemPayload) {\n    console.log(_item);\n    throw ErrorItemPayload(item);\n  }\n\n  return _item._$hiddenItemPayload[key] as ItemPayloadValue;\n};\n\n/**\n * getItemPayload returns itemPayload which is in hidden-type-mode\n */\n// prettier-ignore\nexport const getItemPayload = <\n  Item,\n>(item: Item): Readonly<ItemPayload<Item>> => {\n  const _item = item as Item & HiddenItemPayload<Item>;\n  if (!_item?._$hiddenItemPayload) {\n    console.log(_item);\n    throw ErrorItemPayload(item);\n  }\n\n  return _item._$hiddenItemPayload as Readonly<ItemPayload<Item>>;\n};\n\nexport const getItemData = <Item>(item: Item): object => {\n  const _item = item as Item & HiddenItemPayload<Item>;\n  if (!_item?._$hiddenItemPayload) throw ErrorItemPayload(item);\n\n  const hiddenItemPayload = _item._$hiddenItemPayload;\n  delete (_item as Partial<typeof _item>)._$hiddenItemPayload;\n  const clonedData = structuredClone(_item);\n  _item._$hiddenItemPayload = hiddenItemPayload;\n  return clonedData;\n};\n\n/**\n * deleteItemPayload deletes the hidden item payload\n */\nexport const deleteItemPayload = <Item>(item: Partial<HiddenItemPayload<Item>>): Item => {\n  delete item?._$hiddenItemPayload;\n  return item as Item;\n};\n\n/**\n * hasItemPayload returns true if item has hidden item payload\n */\nexport const hasItemPayload = <Item>(item: Item) => {\n  const _item = item as Item & HiddenItemPayload<Item>;\n  return !!_item?._$hiddenItemPayload;\n};\n\nexport const throwError = (message: string) => {\n  throw new Error(message);\n};\n\nexport const ErrorItemPayload = (item: unknown) => {\n  return new Error(\n    `HiddenItemPayload does not exists on \"${JSON.stringify(item)}\".` +\n      'Please make sure it is set by using setItemPayload.',\n  );\n};\n","import { Injectable } from '@angular/core';\nimport { GlobalRules, ItemActionType, ItemRules, RuleTypes } from './cdk-datagrid-data.manager';\nimport { getItemPayload } from './cdk-datagrid.utils';\nimport { AbstractControl } from '@angular/forms';\n\n@Injectable()\nexport class CdkDatagridRuleManager<Item> {\n  #globalItemRules!: GlobalRules<Item>;\n\n  setGlobalRules(itemRules: GlobalRules<Item>) {\n    this.#globalItemRules = itemRules;\n  }\n\n  canRule<ItemKey extends keyof Item, ActionType extends ItemActionType>(\n    item: Item,\n    key: ItemKey,\n    actionType: ActionType,\n  ) {\n    return this.getRule(item, key, actionType);\n  }\n\n  canValidate<ItemKey extends keyof Item, ActionType extends ItemActionType>(\n    item: Item,\n    key: ItemKey,\n    actionType: ActionType,\n  ) {\n    return !!this.canRule(item, key, actionType)?.validate;\n  }\n\n  canRender<ItemKey extends keyof Item, ActionType extends ItemActionType>(\n    item: Item,\n    key: ItemKey,\n    actionType: ActionType,\n  ) {\n    return !!this.canRule(item, key, actionType)?.render;\n  }\n\n  canDisable<ItemKey extends keyof Item, ActionType extends ItemActionType>(\n    item: Item,\n    key: ItemKey,\n    actionType: ActionType,\n  ) {\n    return !!this.canRule(item, key, actionType)?.disable;\n  }\n\n  canAction<ItemKey extends keyof Item, ActionType extends ItemActionType>(\n    item: Item,\n    key: ItemKey,\n    actionType: ActionType,\n  ) {\n    return !!this.canRule(item, key, actionType)?.action;\n  }\n\n  getActionRule<ItemKey extends keyof Item, ActionType extends ItemActionType>(\n    item: Item,\n    key: ItemKey,\n    actionType: ActionType,\n  ) {\n    const action = this.getRule(item, key, actionType)?.action;\n    if (!action) {\n      return null;\n    }\n\n    if (typeof action?.cond === 'function' && action.cond() === true) {\n      return action;\n    } else if (typeof action?.cond === 'boolean' && action.cond === true) {\n      return action;\n    } else if (typeof action?.cond === 'undefined') {\n      return action;\n    } else {\n      return null;\n    }\n  }\n\n  applyRules<ItemKey extends keyof Item, ActionType extends ItemActionType>(\n    item: Item,\n    key: ItemKey,\n    actionType: ActionType,\n    formControl: AbstractControl | null,\n    initialValue: string,\n  ) {\n    const rule = this.getRule(item, key, actionType);\n    this.#applyRules(rule, formControl, initialValue);\n  }\n\n  #getItemRules(item: Item) {\n    return getItemPayload(item)?.rules;\n  }\n\n  #getGlobalRules<ActionType extends ItemActionType>(actionType: ActionType) {\n    return this.#globalItemRules?.[actionType];\n  }\n\n  getRule<ItemKey extends keyof Item, ActionType extends ItemActionType>(\n    item: Item,\n    key: ItemKey,\n    actionType: ActionType,\n  ) {\n    let rules: RuleTypes = {};\n\n    // has global one up (e.g. override/../disable) some rules?\n    const parentGlobalRules = this.#getGlobalRules(actionType) || {};\n    if (parentGlobalRules) rules = this.#mergeRules(parentGlobalRules, rules);\n\n    // has global override rules?\n    const globalOverrideRules = this.#getGlobalRules(actionType)?.overrides?.[key] || {};\n    if (globalOverrideRules) rules = this.#mergeRules(globalOverrideRules, rules);\n\n    // has item one up (e.g. override/../disable) some rules?\n    const parentItemRules = this.#getItemRules(item) || {};\n    if (parentItemRules) rules = this.#mergeRules(parentItemRules, rules);\n\n    // has item override rules?\n    const itemOverrideRules = this.#getItemRules(item)?.overrides?.[key] || {};\n    if (itemOverrideRules) rules = this.#mergeRules(itemOverrideRules, rules);\n\n    return rules;\n  }\n\n  #mergeRules(intoRule: RuleTypes, fromRule: RuleTypes) {\n    return {\n      validate: intoRule.validate ?? fromRule.validate,\n      disable: intoRule.disable ?? fromRule.disable,\n      render: intoRule.render ?? fromRule.render,\n      placeholder: intoRule.placeholder ?? fromRule.placeholder,\n      action: intoRule.action ?? fromRule.action,\n    };\n  }\n\n  #applyRules(\n    rules: ItemRules<Item> | null | undefined,\n    formControl: AbstractControl | null,\n    initialValue: string,\n  ) {\n    if (formControl?.value !== initialValue) {\n      rules?.render === undefined && formControl?.setValue(initialValue);\n      rules?.render === true && formControl?.setValue(initialValue);\n    }\n\n    if (rules?.render === false && formControl?.value !== '') {\n      formControl?.setValue('');\n    }\n\n    if (rules?.disable === true && !formControl?.disabled) {\n      formControl?.disable();\n    }\n\n    if (!rules?.disable && !formControl?.enabled) {\n      formControl?.enable();\n    }\n\n    if (!formControl?.disabled && (rules?.validate === false || rules?.validate === undefined)) {\n      formControl?.setValidators([]);\n      formControl?.setAsyncValidators([]);\n      formControl?.updateValueAndValidity();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\nimport { CdkDatagridFormControlDirective } from './cdk-datagrid-form-control.directive';\nimport { batchValidatorFactory, Validation } from './cdk-datagrid-batch.validation';\nimport { Observable } from 'rxjs';\nimport { Validators } from './cdk-datagrid.validators';\nimport { tap } from 'rxjs/operators';\nimport { CdkDatagridRuleManager } from './cdk-datagrid-rule.manager';\nimport { CdkDatagridDataManager } from './cdk-datagrid-data.manager';\nimport { getItemPayload } from './cdk-datagrid.utils';\n\nexport type DatagridForms<Item> = Map<string, CdkDatagridFormControlDirective<Item>>;\n\n@Injectable()\nexport class CdkDatagridFormManager<\n  Item,\n  ItemKey extends keyof Item = keyof Item,\n  ItemValue extends Item[ItemKey] = Item[ItemKey],\n> {\n  constructor(\n    private readonly _formBuilder: UntypedFormBuilder,\n    private readonly _dataManger: CdkDatagridDataManager<Item>,\n    private readonly _ruleManager: CdkDatagridRuleManager<Item>,\n  ) {}\n\n  readonly #formControlsByIds: DatagridForms<Item> = new Map();\n\n  readonly #formGroup = this._formBuilder.group({});\n\n  formGroupControls = this.#formGroup.controls;\n\n  #prevValidations: Validation[] = [];\n\n  #batchValidation$!: Observable<Validation[]>;\n\n  getBatchValidation() {\n    return this.#batchValidation$;\n  }\n\n  setBatchValidation(batchValidations: Observable<Validation[]>) {\n    this.#batchValidation$ = batchValidations;\n  }\n\n  addFormControl(\n    formControlName: string,\n    value: ItemValue,\n    formControlDir: CdkDatagridFormControlDirective<Item>,\n    asyncValidatorFn = Validators.nullAsyncValidator(),\n  ) {\n    this.#formGroup.addControl(\n      formControlName,\n      this._formBuilder.group({\n        [formControlName]: this._formBuilder.control(value, {\n          validators: [...(formControlDir.validator?.validator || [])],\n          asyncValidators: [...(formControlDir.validator?.asyncValidator || []), asyncValidatorFn],\n          updateOn: formControlDir.validator?.updateOn ?? 'submit',\n        }),\n      }),\n    );\n\n    this.#formControlsByIds.set(formControlName, formControlDir);\n  }\n\n  watchBatchValidations(batchValidation$: Observable<Validation[]>) {\n    this.setBatchValidation(batchValidation$);\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    return batchValidation$.pipe(\n      tap((validations = []) => {\n        // reset prev errors\n        this.#prevValidations.forEach(({ index, field }) => {\n          const formControl = this.#formControlsByIds.get(`${index}-${field}`);\n          formControl?.setError(null);\n        });\n\n        validations.forEach(({ index, field, validationCode, validationMessage }) => {\n          const item = this._dataManger.getItemByIndex(index);\n          const itemPayload = getItemPayload(item);\n          const actionType = itemPayload?.actionType;\n\n          const formControl = this.#formControlsByIds.get(`${index}-${field}`);\n          const ruleTypes = this._ruleManager.getRule(item, <ItemKey>field, actionType);\n          if (ruleTypes.validate && formControl) {\n            formControl?.setError({ validationCode, validationMessage });\n          }\n        });\n\n        this.#prevValidations = validations;\n      }),\n    );\n  }\n\n  createAsyncBatchValidator(key: ItemKey, index: number) {\n    let batchValidator = Validators.nullAsyncValidator();\n    const batchValidation = this.getBatchValidation();\n    if (batchValidation) {\n      batchValidator = batchValidatorFactory(batchValidation, key as never, index);\n    }\n    return batchValidator;\n  }\n\n  getFormControlGroup(uuid: string): UntypedFormGroup {\n    return this.#formGroup.get(uuid) as UntypedFormGroup;\n  }\n\n  getFormControl(uuid: string) {\n    return this.getFormControlGroup(uuid)?.get(uuid);\n  }\n\n  removeFormControl(uuid: string) {\n    this.#formGroup.removeControl(uuid);\n    this.#formControlsByIds.delete(uuid);\n  }\n}\n","import { Directive, Input } from '@angular/core';\nimport { CdkDatagridFormManager } from './cdk-datagrid-form.manager';\nimport { getItemData, getItemPayloadValue, setItemPayload, throwError } from './cdk-datagrid.utils';\nimport { CdkDatagridDataManager, ItemActionType } from './cdk-datagrid-data.manager';\nimport { CdkDatagridRuleManager } from './cdk-datagrid-rule.manager';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[cdk-datagrid-edit]',\n  standalone: true,\n})\nexport class CdkDatagridStorageDirective<\n  Item,\n  ItemKey extends keyof Item = keyof Item,\n  ItemValue extends Item[ItemKey] = Item[ItemKey],\n> {\n  constructor(\n    private readonly _dataSourceManager: CdkDatagridDataManager<Item>,\n    private readonly _formManager: CdkDatagridFormManager<Item>,\n    private readonly _ruleManager: CdkDatagridRuleManager<Item>,\n  ) {}\n\n  @Input() item!: Item;\n\n  @Input() key!: keyof Item;\n  @Input() render!: keyof Item;\n  get renderKey() {\n    return this.render || this.key || throwError('@Input().key or @Input().render is missing');\n  }\n\n  get placeholder() {\n    const action = getItemPayloadValue(this.item, 'actionType');\n    return this._ruleManager.getRule(this.item, this.key, action)?.placeholder;\n  }\n\n  get groupId() {\n    return getItemPayloadValue(this.item, 'groupId');\n  }\n\n  get index() {\n    return getItemPayloadValue(this.item, 'index');\n  }\n\n  @Input() get actionType(): ItemActionType {\n    return `${getItemPayloadValue(this.item, 'actionType')}`;\n  }\n\n  createUuid() {\n    return `${getItemPayloadValue(this.item, 'index')}-${String(this.key)}`;\n  }\n\n  setValue(value: unknown) {\n    let valueByKey = value as unknown as ItemValue;\n    if (typeof value === 'object') {\n      valueByKey = (value as unknown as Item)[this.key] as ItemValue;\n    } else if (typeof value === 'string') {\n      value = value.trim();\n    }\n\n    const actionType = getItemPayloadValue(this.item, 'actionType');\n    const action = this._ruleManager.getActionRule(this.item, this.key, actionType);\n\n    let _itemData = { [this.key]: valueByKey };\n    if (action?.transform) {\n      _itemData = getItemData(this.item) as { [key: string]: ItemValue };\n      _itemData = action.transform(_itemData, this.key, value);\n    }\n\n    this._dataSourceManager.setValue(this.key, valueByKey, this.item, payload => {\n      const id = `${payload.index}-${String(this.key)}`;\n      const formControl = this._formManager.getFormControl(id);\n      if (!formControl) return;\n\n      const item = setItemPayload({} as Item, payload);\n      const actionType = payload.actionType;\n      this._ruleManager.applyRules(item, this.key, actionType, formControl, value as string);\n    });\n\n    let valueByRender = value as unknown;\n    if (typeof value === 'object') {\n      valueByRender = (value as unknown as Item)[this.render];\n    }\n    if (this.renderKey && valueByRender) {\n      this._dataSourceManager.setValue(this.renderKey, valueByRender as ItemValue, this.item);\n    }\n  }\n}\n","import { Self } from '@angular/core';\nimport { CdkDatagridStorageDirective } from './cdk-datagrid-storage.directive';\nimport { providerTokenFactory } from '@rescoped/provider/factory';\n\nexport const { DATAGRID_STORAGE_PROVIDER, DATAGRID_STORAGE_TOKEN } = providerTokenFactory(\n  'DATAGRID_STORAGE',\n  CdkDatagridStorageDirective,\n  [Self],\n);\n","import { ChangeDetectorRef, Directive, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AbstractControlOptions,\n  AsyncValidatorFn,\n  ValidationErrors,\n  ValidatorFn,\n} from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { CdkDatagridFormManager } from './cdk-datagrid-form.manager';\nimport { DATAGRID_STORAGE_TOKEN } from './cdk-datagrid-storage.factory';\nimport { CdkDatagridStorageDirective } from './cdk-datagrid-storage.directive';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { FieldValidationErrors } from './cdk-datagrid.validators';\nimport { CdkDatagridRuleManager } from './cdk-datagrid-rule.manager';\nimport { getItemPayload } from './cdk-datagrid.utils';\n\nexport interface DatagridValidation {\n  validator?: ValidatorFn[];\n  asyncValidator?: AsyncValidatorFn[];\n  updateOn?: AbstractControlOptions['updateOn'];\n}\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[cdk-datagrid-edit]',\n  standalone: true,\n})\nexport class CdkDatagridFormControlDirective<Item> implements OnInit, OnDestroy {\n  constructor(\n    private readonly _cdr: ChangeDetectorRef,\n    @Inject(DATAGRID_STORAGE_TOKEN)\n    private readonly _storage: CdkDatagridStorageDirective<Item>,\n    private readonly _formManager: CdkDatagridFormManager<Item>,\n    private readonly _ruleManager: CdkDatagridRuleManager<Item>,\n  ) {}\n\n  readonly #unsub$ = new Subject<void>();\n\n  get canRender() {\n    const { key, actionType, item } = this._storage;\n    return this._ruleManager.getRule(item, key, actionType)?.render;\n  }\n\n  get formControlGroup() {\n    return this._formManager.getFormControlGroup(this.formControlName);\n  }\n\n  get formControlName() {\n    return this._storage.createUuid();\n  }\n\n  @Input() validator: DatagridValidation = {\n    validator: [],\n    asyncValidator: [],\n    updateOn: 'submit',\n  };\n\n  get initialValue() {\n    return this._storage.item[this._storage.renderKey || this._storage.key];\n  }\n\n  get value() {\n    return this.control?.value;\n  }\n\n  get control() {\n    return this._formManager?.getFormControl(this._storage.createUuid());\n  }\n\n  get disabled() {\n    return this.control?.disabled;\n  }\n\n  get valid() {\n    return this.control?.valid;\n  }\n\n  get errors(): FieldValidationErrors | null {\n    return this.control?.errors as FieldValidationErrors | null;\n  }\n\n  setError(errors: ValidationErrors | null) {\n    return this.control?.setErrors(errors);\n  }\n\n  validate() {\n    if (this.valid) {\n      this.control?.markAsUntouched();\n    } else {\n      this.control?.markAsTouched();\n    }\n  }\n\n  ngOnInit() {\n    const { key, index, item } = this._storage;\n    const actionType = getItemPayload(item).actionType;\n    const batchValidator = this._formManager.createAsyncBatchValidator(key, index);\n\n    this._formManager.addFormControl(this.formControlName, this.initialValue, this, batchValidator);\n    const formControl = this._formManager?.getFormControl(this.formControlName);\n\n    const initialValue = this.initialValue as unknown as string;\n    this._ruleManager.applyRules(item, key, actionType, formControl, initialValue);\n\n    formControl?.statusChanges\n      .pipe(\n        tap(() => this._cdr.markForCheck()),\n        takeUntil(this.#unsub$),\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    if (this._storage.item && this._formManager.formGroupControls[this.formControlName]) {\n      this._formManager.removeFormControl(this.formControlName);\n    }\n\n    this.#unsub$.next();\n    this.#unsub$.complete();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * The CDK_EDIT_TAG_CLASS is a unique identifier whose use should match the CdkDatagridEdit\n * interface in the directive where it is used.\n *\n * @example CdkDatagridEditDirective in cdk-datagrid-edit.directive.ts\n */\nexport const CDK_EDIT_TAG_CLASS = 'cdk-datagrid-edit';\n\n/**\n * The CDK_EDIT_CSS_CLASS is used to query the proper html dom node reference in order to get the\n * directive instance of CdkDatagridEdit interface.\n */\nexport const CDK_EDIT_CSS_CLASS = `.${CDK_EDIT_TAG_CLASS}`;\n\n/**\n * The CdkMapEdit stores a collection of html dom node references and directive instances of\n * CdkDatagridEdit.\n */\nexport type CdkMapEdit = Map<HTMLElement, CdkDatagridEdit>;\n\n/**\n * An interface which should be used in the corresponding Directive.\n *\n * @example CdkDatagridEditDirective in cdk-datagrid-edit.directive.ts\n */\nexport interface CdkDatagridEdit {\n  activeEdit(): void;\n  inactiveEdit(): void;\n}\n\n/**\n * An event which hold in target the HTMLElement which is exactly the one in CdkMapEdit\n *\n * @see CdkMapEdit\n */\nexport interface EventWithTarget<Element> {\n  target: Element;\n}\n\n/**\n * CdkDatagridEditManager provides some useful methods for write, read, delete or interacting\n * with directive instances of CdkDatagridEdit.\n *\n * @example test/cdk-datagrid-edit.manager.spec.ts\n */\n@Injectable()\nexport class CdkDatagridEditManager<\n  Element extends HTMLElement = HTMLElement,\n  _Event extends EventWithTarget<Element> = EventWithTarget<Element>,\n  Editable extends CdkDatagridEdit = CdkDatagridEdit,\n> {\n  /**\n   * inCellZone is a boolean which indicates if the mouse event is in the cell zone.\n   */\n  inCellZone = false;\n\n  /**\n   * @see CdkMapEdit in cdk-datagrid-edit.manager.ts\n   *\n   * @internal\n   **/\n  readonly #edits: CdkMapEdit = new Map();\n\n  /**\n   * The #lastEditItemEl is the last edited element.\n   *\n   * @internal\n   */\n  #lastEditItemEl: Element | undefined;\n\n  /**\n   * The #lastEditItemRef is the last edited CdkDatagridEdit reference.\n   *\n   * @internal\n   */\n  #lastEditItemRef: CdkDatagridEdit | undefined;\n\n  /**\n   * setActiveEditItem extracts and finds the right CDK_EDIT_CSS_CLASS domNode\n   * from event.target in order to pull the correct directive instance from CdkMapEdit to interact\n   * with CdkDatagridEdit.activeEdit() and CdkDatagridEdit.inactiveEdit().\n   */\n  setActiveEditItem(event: Event) {\n    const currentEditAbleItemEl = this.getCurrentItem(event);\n    if (!currentEditAbleItemEl) {\n      return;\n    }\n\n    if (this.#lastEditItemEl === currentEditAbleItemEl) {\n      return;\n    }\n\n    if (this.#lastEditItemEl) {\n      this.setInactiveLastEditItem();\n    }\n\n    this.#storeLastEditItem(currentEditAbleItemEl);\n    this.getEditItem(currentEditAbleItemEl)?.activeEdit();\n  }\n\n  /**\n   * setEditItem sets element and editable in CdkMapEdit\n   */\n  setEditItem(element: Element, editable: Editable) {\n    this.#edits.set(element, editable);\n  }\n\n  /**\n   * getEditItem returns the directive instance by given element reference\n   */\n  getEditItem(element: Element) {\n    return this.#edits.get(element);\n  }\n\n  /**\n   * setInactiveEditItem sets the item to inactive.\n   */\n  setInactiveEditItem(event: Event) {\n    const currentEditAbleItemEl = this.getCurrentItem(event);\n    if (!currentEditAbleItemEl) {\n      return;\n    }\n\n    this.getEditItem(currentEditAbleItemEl)?.inactiveEdit();\n    // @todo: remove this later when keyboard moving is working. This is just for avoiding tabbing!\n    event.preventDefault();\n  }\n\n  /**\n   * deleteEditItem deletes the directive instance from CdkMapEdit by given element reference\n   */\n  deleteEditItem(element: Element) {\n    const deleted = this.#edits.delete(element);\n    const directive = this.getEditItem(element);\n    if (deleted && directive) directive.inactiveEdit();\n  }\n\n  isInZoneEditItem(event: Event) {\n    const currentEditItemEl = this.#getElementFromEvent(event);\n    return (this.inCellZone = this.#isInZoneEditEl(currentEditItemEl));\n  }\n\n  /**\n   * getCurrentItem returns the current edited element\n   */\n  getCurrentItem(event: Event) {\n    let currentEditItemEl = this.#getElementFromEvent(event);\n\n    const isInZoneEditEl = this.#isInZoneEditEl(currentEditItemEl);\n    if (!isInZoneEditEl) {\n      this.setInactiveLastEditItem();\n      return null;\n    }\n\n    const fromInnerEditEl = this.#getFromInnerOrSelfEditEl(currentEditItemEl);\n    if (fromInnerEditEl) {\n      currentEditItemEl = fromInnerEditEl;\n    }\n\n    if (!currentEditItemEl) {\n      throw new Error(`Could not found ${CDK_EDIT_CSS_CLASS} element!`);\n    }\n\n    return currentEditItemEl;\n  }\n\n  /**\n   * setInactiveLastEditItem sets the last edited element inactive\n   */\n  setInactiveLastEditItem() {\n    this.#lastEditItemRef?.inactiveEdit();\n    this.#lastEditItemEl = undefined;\n  }\n\n  /** @private */\n  #storeLastEditItem(element: Element) {\n    this.#lastEditItemEl = element;\n    this.#lastEditItemRef = this.getEditItem(element);\n  }\n\n  /** @private */\n  #isInZoneEditEl(element: Element) {\n    return !!this.#getFromInnerOrSelfEditEl(element);\n  }\n\n  /** @private */\n  #getElementFromEvent(element: Event) {\n    const _element = (element as unknown as _Event)?.target as Element;\n    if (!_element) {\n      throw new Error('Event.target does not contain HTMLElement');\n    }\n    return _element;\n  }\n\n  /** @private */\n  #getFromInnerOrSelfEditEl(element: Element) {\n    return element.closest<Element>(CDK_EDIT_CSS_CLASS);\n  }\n}\n","import { Directive, ElementRef, HostBinding, Input, OnDestroy, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n  CDK_EDIT_TAG_CLASS,\n  CdkDatagridEdit,\n  CdkDatagridEditManager,\n} from './cdk-datagrid-edit.manager';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[cdk-datagrid-edit]',\n  standalone: true,\n})\nexport class CdkDatagridEditDirective implements OnInit, OnDestroy, CdkDatagridEdit {\n  constructor(\n    private readonly _elementRef: ElementRef<HTMLElement>,\n    private readonly _editManager: CdkDatagridEditManager,\n  ) {}\n\n  @HostBinding(`class.${CDK_EDIT_TAG_CLASS}`) hostClass = true;\n  @Input() editable = true;\n\n  readonly active$ = new BehaviorSubject<boolean>(false);\n\n  activeEdit() {\n    this.editable && this.active$.next(true);\n  }\n\n  inactiveEdit() {\n    this.editable && this.active$.next(false);\n  }\n\n  ngOnInit() {\n    this._editManager.setEditItem(this._elementRef.nativeElement, this);\n  }\n\n  ngOnDestroy() {\n    this._editManager.deleteEditItem(this._elementRef.nativeElement);\n  }\n}\n","import { Directive, Input } from '@angular/core';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[cdk-datagrid-edit]',\n  standalone: true,\n})\nexport class CdkDatagridCommonDirective {\n  @Input() type: 'text' | 'number' | 'time' = 'text';\n\n  #autocomplete = 'off';\n\n  get autocomplete() {\n    return this.#autocomplete as unknown as boolean;\n  }\n  @Input() set autocomplete(value: boolean) {\n    this.#autocomplete = value ? 'on' : 'off';\n  }\n}\n","import { Self } from '@angular/core';\nimport { CdkDatagridCommonDirective } from './cdk-datagrid-common.directive';\nimport { providerTokenFactory } from '@rescoped/provider/factory';\n\n// @todo: rename to providerFactory\nexport const { DATAGRID_COMMON_PROVIDER, DATAGRID_COMMON_TOKEN } = providerTokenFactory(\n  'DATAGRID_COMMON',\n  CdkDatagridCommonDirective,\n  [Self],\n);\n","import { Self } from '@angular/core';\nimport { providerTokenFactory } from '@rescoped/provider/factory';\nimport { CdkDatagridEditDirective } from './cdk-datagrid-edit.directive';\n\nexport const { DATAGRID_EDIT_PROVIDER, DATAGRID_EDIT_TOKEN } = providerTokenFactory(\n  'DATAGRID_EDIT',\n  CdkDatagridEditDirective,\n  [Self],\n);\n","import { Self } from '@angular/core';\nimport { providerTokenFactory } from '@rescoped/provider/factory';\nimport { CdkDatagridFormControlDirective } from './cdk-datagrid-form-control.directive';\n\nexport const { DATAGRID_FORM_CONTROL_PROVIDER, DATAGRID_FORM_CONTROL_TOKEN } = providerTokenFactory(\n  'DATAGRID_FORM_CONTROL',\n  CdkDatagridFormControlDirective,\n  [Self],\n);\n","import { AfterViewInit, ChangeDetectorRef, Directive, ElementRef, Inject } from '@angular/core';\nimport { CdkDatagridFormControlDirective } from './cdk-datagrid-form-control.directive';\nimport { DATAGRID_FORM_CONTROL_TOKEN } from './cdk-datagrid-form-control.factory';\n\n// MDC\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'input[cdkFocusInput]',\n  standalone: true,\n})\nexport class CdkDatagridFocusInputDirective<Item> implements AfterViewInit {\n  constructor(\n    @Inject(DATAGRID_FORM_CONTROL_TOKEN)\n    public readonly _formControl: CdkDatagridFormControlDirective<Item>,\n    private readonly _elementRef: ElementRef<HTMLInputElement>,\n    private readonly _cdr: ChangeDetectorRef,\n  ) {}\n\n  ngAfterViewInit() {\n    // @todo: dry (*1)(move into factory)\n    this._formControl.validate();\n    this._elementRef.nativeElement.focus();\n    this._cdr.detectChanges();\n  }\n}\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'input[matAutocomplete][cdkFocusCombobox]',\n  standalone: true,\n})\nexport class CdkDatagridFocusComboboxDirective<Item> implements AfterViewInit {\n  constructor(\n    @Inject(DATAGRID_FORM_CONTROL_TOKEN)\n    public readonly _formControl: CdkDatagridFormControlDirective<Item>,\n    private readonly _elementRef: ElementRef<HTMLInputElement>,\n    private readonly _autoComplete: MatAutocompleteTrigger,\n    private readonly _cdr: ChangeDetectorRef,\n  ) {}\n\n  ngAfterViewInit() {\n    // @todo: dry (*1)(move into factory))\n    this._formControl.validate();\n    this._elementRef.nativeElement.focus();\n    this._cdr.detectChanges();\n    setTimeout(() => this._autoComplete.openPanel(), 0);\n  }\n}\n","import { CdkDatagridFormControlDirective } from './cdk-datagrid-form-control.directive';\nimport { CdkDatagridEditDirective } from './cdk-datagrid-edit.directive';\nimport { DATAGRID_COMMON_PROVIDER, DATAGRID_COMMON_TOKEN } from './cdk-datagrid-common.factory';\nimport { CdkDatagridCommonDirective } from './cdk-datagrid-common.directive';\nimport { DATAGRID_EDIT_PROVIDER, DATAGRID_EDIT_TOKEN } from './cdk-datagrid-edit.factory';\nimport { CdkDatagridStorageDirective } from './cdk-datagrid-storage.directive';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Inject,\n  InjectionToken,\n  Injector,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  DATAGRID_FORM_CONTROL_PROVIDER,\n  DATAGRID_FORM_CONTROL_TOKEN,\n} from './cdk-datagrid-form-control.factory';\nimport { DATAGRID_STORAGE_PROVIDER, DATAGRID_STORAGE_TOKEN } from './cdk-datagrid-storage.factory';\nimport { ComponentPortal, Portal, PortalModule } from '@angular/cdk/portal';\nimport { CdkDatagridRuleManager } from './cdk-datagrid-rule.manager';\nimport { getItemPayload } from './cdk-datagrid.utils';\nimport { CdkDatagridFocusInputDirective } from './mat-datagrid-focus.directives';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgClass, AsyncPipe } from '@angular/common';\n\n// @todo: move to separate file!\nexport const ACTION_DATA = new InjectionToken<unknown>('ActionData');\n\n// eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'mat-datagrid-input',\n  exportAs: 'matDatagridInput',\n  providers: [\n    DATAGRID_COMMON_PROVIDER,\n    DATAGRID_EDIT_PROVIDER,\n    DATAGRID_FORM_CONTROL_PROVIDER,\n    DATAGRID_STORAGE_PROVIDER,\n  ],\n  template: `\n    <ng-template [cdkPortalOutlet]=\"beforeActionPortal\"></ng-template>\n    @if (!override) {\n      @if ((_edit.active$ | async) === true && !_formControl.disabled) {\n        <form\n          novalidate\n          [formGroup]=\"_formControl.formControlGroup\"\n          (ngSubmit)=\"_inputChange(input.value); _formControl.errors && tooltip.show()\"\n        >\n          <mat-form-field\n            appearance=\"outline\"\n            #tooltip=\"matTooltip\"\n            [matTooltip]=\"_formControl.errors?.validationMessage\"\n            [matTooltipPosition]=\"'above'\"\n            [matTooltipDisabled]=\"!_formControl.errors\"\n            [matTooltipShowDelay]=\"0\"\n            [matTooltipHideDelay]=\"0\"\n          >\n            <input\n              matInput\n              cdkFocusInput\n              #input\n              [placeholder]=\"_storage.placeholder\"\n              [formControlName]=\"_formControl.formControlName\"\n              [type]=\"_common.type\"\n              [autocomplete]=\"_common.autocomplete\"\n            />\n            @if (_formControl.errors) {\n              <mat-error></mat-error>\n            }\n          </mat-form-field>\n        </form>\n      } @else {\n        <div\n          [title]=\"_formControl.value\"\n          class=\"cdk-default-field\"\n          [ngClass]=\"{\n            disabled: _formControl.disabled,\n            'mat-red-500 mat-error': _formControl.errors\n          }\"\n        >\n          <span>{{ _formControl.value || _storage.placeholder }}</span>\n        </div>\n      }\n    }\n    <ng-template [cdkPortalOutlet]=\"afterActionPortal\"></ng-template>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    PortalModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatTooltipModule,\n    MatInputModule,\n    CdkDatagridFocusInputDirective,\n    NgClass,\n    AsyncPipe,\n  ],\n})\nexport class MatDatagridInputComponent<Item> implements OnInit {\n  constructor(\n    @Inject(DATAGRID_COMMON_TOKEN)\n    public readonly _common: CdkDatagridCommonDirective,\n    @Inject(DATAGRID_EDIT_TOKEN)\n    public readonly _edit: CdkDatagridEditDirective,\n    @Inject(DATAGRID_FORM_CONTROL_TOKEN)\n    public readonly _formControl: CdkDatagridFormControlDirective<Item>,\n    @Inject(DATAGRID_STORAGE_TOKEN)\n    public readonly _storage: CdkDatagridStorageDirective<Item>,\n\n    private readonly _cdr: ChangeDetectorRef,\n    private readonly _injector: Injector,\n    private readonly _ruleManager: CdkDatagridRuleManager<Item>,\n  ) {}\n\n  index!: number;\n  override = false;\n  afterActionPortal!: Portal<any>;\n  beforeActionPortal!: Portal<any>;\n  componentPortal!: ComponentPortal<unknown>;\n\n  @HostBinding('class.mat-datagrid-input') hostClass = true;\n\n  @Output() inputChange = new EventEmitter<string>();\n\n  // @todo: everything have to be moved to a directive\n  // - have CdkDatagridActionDirective but works not well because have to trigger\n\n  ngOnInit() {\n    const { item, key } = this._storage;\n    const actionType = getItemPayload(item).actionType;\n    const action = this._ruleManager.getActionRule(item, key, actionType);\n\n    const componentType = action?.componentType;\n    const componentPosition = action?.componentPosition;\n\n    if (action && typeof componentType === 'function') {\n      const actionDataInjector = Injector.create({\n        parent: this._injector,\n        providers: [{ provide: ACTION_DATA, useValue: action.data || null }],\n      });\n\n      if (typeof componentPosition === 'string' && componentPosition === 'before') {\n        this.beforeActionPortal = new ComponentPortal(componentType, null, actionDataInjector);\n      } else if (typeof componentPosition === 'string' && componentPosition === 'after') {\n        this.afterActionPortal = new ComponentPortal(componentType, null, actionDataInjector);\n      } else {\n        this.override = true;\n        this.beforeActionPortal = new ComponentPortal(componentType, null, actionDataInjector);\n      }\n\n      this._cdr.markForCheck();\n      this._cdr.detectChanges();\n    }\n  }\n\n  /** @internal */\n  _inputChange(value: string) {\n    this._storage.setValue(value); // @todo: when input type is number then convert to number\n    this.inputChange.emit(value);\n  }\n}\n\nexport const MAT_FORMAT_INPUT = new InjectionToken<DatagridInputFormats>('matInputFormats');\nexport const MAT_NUMBER_INPUT = new InjectionToken<DatagridInputFormats>('matInputNumbers');\n\nexport interface DatagridInputFormatsTypes {\n  parse?: RegExp;\n  display?: RegExp;\n}\n\nexport interface DatagridInputNumbersTypes {\n  round?: number | ((value: number) => number);\n}\n\nexport interface DatagridInputFormats<Item = unknown> extends DatagridInputFormatsTypes {\n  overrides?: {\n    [itemKey in keyof Item]?: DatagridInputFormatsTypes;\n  };\n}\n\nexport interface DatagridInputNumbers<Item = unknown> extends DatagridInputNumbersTypes {\n  overrides?: {\n    [itemKey in keyof Item]?: DatagridInputFormatsTypes;\n  };\n}\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { DateAdapter, MatDateFormats, MAT_DATE_FORMATS } from '@angular/material/core';\n\nexport const MAT_FORMAT_DATE_INPUT = new InjectionToken<string>('dateFormatValue');\n\nexport const MAT_DATE_CLASS = new InjectionToken<MatDateClass>('matDateAdapter');\n\nexport type MatDateClass = (value: unknown) => unknown;\n\ninterface DateAdapterFormatter extends Pick<DateAdapter<unknown>, 'format'> {}\n\nexport const matDateFormatsDefaults: MatDateFormats = {\n  display: {\n    dateInput: 'YYYY-MM-DD',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n  parse: {\n    dateInput: ['YYYY-MM-DD'],\n  },\n};\n\n@Injectable()\nexport class CdkDatagridDateAdapter implements DateAdapterFormatter {\n  constructor(\n    @Inject(MAT_DATE_CLASS) private readonly matDateClass: MatDateClass,\n    @Inject(MAT_DATE_FORMATS) public readonly matDateFormats: MatDateFormats,\n    @Inject(MAT_FORMAT_DATE_INPUT) public readonly matFormatDateInput: string,\n    private readonly _dateAdapter: DateAdapter<unknown>,\n  ) {}\n\n  format(date: Date | string | unknown, format: string) {\n    if (!date) return '';\n    return this._dateAdapter.format(this.matDateClass(date), format);\n  }\n}\n","import {\n  DatagridInputFormats,\n  DatagridInputNumbers,\n  MAT_FORMAT_INPUT,\n  MAT_NUMBER_INPUT,\n} from './mat-datagrid-input';\n\nimport { PartialDeep } from './cdk-datagrid.types';\nimport {\n  EnvironmentProviders,\n  importProvidersFrom,\n  LOCALE_ID,\n  makeEnvironmentProviders,\n  Provider,\n} from '@angular/core';\nimport {\n  CdkDatagridDateAdapter,\n  MAT_DATE_CLASS,\n  matDateFormatsDefaults,\n} from './cdk-datagrid-date.adapter';\nimport deepmerge from 'deepmerge';\nimport moment from 'moment';\nimport {\n  MAT_MOMENT_DATE_ADAPTER_OPTIONS,\n  MomentDateAdapter,\n} from '@angular/material-moment-adapter';\nimport {\n  DateAdapter,\n  MAT_DATE_FORMATS,\n  MAT_DATE_LOCALE,\n  MatDateFormats,\n} from '@angular/material/core';\nimport { CdkDatagridRuleManager } from './cdk-datagrid-rule.manager';\nimport { CdkDatagridEditManager } from './cdk-datagrid-edit.manager';\nimport { CdkDatagridFormManager } from './cdk-datagrid-form.manager';\nimport { CdkDatagridDataManager } from './cdk-datagrid-data.manager';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n\nexport function provideDataGrid(options: DatagridOptions): EnvironmentProviders {\n  const optionDateFormats = options?.datepicker?.formats || {};\n  const optionInputFormats = options?.input?.formats || {};\n  const optionInputNumbers = options?.input?.numbers || {};\n  // @todo: use https://developer.mozilla.org/en-US/docs/Web/API/structuredClone insteadof deepmerge\n  const _matDateFormatsDefaults = deepmerge(matDateFormatsDefaults, optionDateFormats);\n  _matDateFormatsDefaults.parse.dateInput = optionDateFormats?.display?.dateInput || 'YYYY-MM-DD';\n\n  return makeEnvironmentProviders([\n    importProvidersFrom(ScrollingModule),\n\n    CdkDatagridFormManager,\n    CdkDatagridRuleManager,\n    CdkDatagridDataManager,\n    CdkDatagridDateAdapter,\n    CdkDatagridEditManager,\n    {\n      provide: DateAdapter,\n      useClass: MomentDateAdapter,\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS],\n    },\n    { provide: MAT_FORMAT_INPUT, useValue: optionInputFormats },\n    { provide: MAT_NUMBER_INPUT, useValue: optionInputNumbers },\n    { provide: MAT_DATE_FORMATS, useValue: _matDateFormatsDefaults },\n    { provide: MAT_DATE_LOCALE, useValue: 'en-GB' },\n    { provide: LOCALE_ID, useValue: 'en-GB' },\n    { provide: MAT_DATE_CLASS, useValue: moment },\n    { provide: MAT_MOMENT_DATE_ADAPTER_OPTIONS, useValue: { useUtc: true } },\n    ...(options?.datepicker?.providers || []),\n  ]);\n}\n\nexport type DatagridOptions<Item = unknown> = {\n  datepicker?: {\n    providers?: Provider[];\n    formats?: PartialDeep<MatDateFormats>;\n  };\n  input?: {\n    // @see: https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat\n    formats?: DatagridInputFormats<Item>;\n    numbers?: DatagridInputNumbers<Item>;\n  };\n};\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Inject,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { getItemPayload } from './cdk-datagrid.utils';\nimport { CdkDatagridDataManager, ItemPayload } from './cdk-datagrid-data.manager';\nimport { ACTION_DATA } from './mat-datagrid-input';\n\ntype ActionData<Item> = { item: Item };\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'cdk-datagrid-collapse',\n  template: ``,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n})\nexport class CdkDatagridCollapseComponent<Item> {\n  constructor(\n    @Inject(ACTION_DATA) public readonly _actionData: ActionData<Item>,\n    private readonly _datasourceManager: CdkDatagridDataManager<Item>,\n  ) {}\n\n  @Output() collapseChange: EventEmitter<ItemPayload<Item>> = new EventEmitter();\n\n  @HostBinding('class.cdk-datagrid-collapse') hostClass = true;\n  @HostBinding('class.cdk-datagrid-collapsible') collapsibleClass = true;\n  @HostBinding('class.cdk-datagrid-collapsed') get collapsedClass() {\n    return this.collapsed;\n  }\n\n  get collapsed() {\n    return getItemPayload(this._actionData.item).collapsed;\n  }\n\n  get getActionType() {\n    return getItemPayload(this._actionData.item).actionType;\n  }\n\n  collapseChanged() {\n    const itemPayload = getItemPayload(this._actionData.item);\n    this._datasourceManager.toggleGroup(itemPayload);\n    this.collapseChange.emit(itemPayload);\n  }\n}\n","import { CdkDatagridEditDirective } from './cdk-datagrid-edit.directive';\nimport { CdkDatagridFormControlDirective } from './cdk-datagrid-form-control.directive';\nimport { CdkDatagridCommonDirective } from './cdk-datagrid-common.directive';\nimport { CdkDatagridStorageDirective } from './cdk-datagrid-storage.directive';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Inject,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DATAGRID_EDIT_PROVIDER, DATAGRID_EDIT_TOKEN } from './cdk-datagrid-edit.factory';\nimport {\n  DATAGRID_FORM_CONTROL_PROVIDER,\n  DATAGRID_FORM_CONTROL_TOKEN,\n} from './cdk-datagrid-form-control.factory';\nimport { DATAGRID_COMMON_PROVIDER, DATAGRID_COMMON_TOKEN } from './cdk-datagrid-common.factory';\nimport { DATAGRID_STORAGE_PROVIDER, DATAGRID_STORAGE_TOKEN } from './cdk-datagrid-storage.factory';\nimport { CdkDatagridDateAdapter } from './cdk-datagrid-date.adapter';\nimport { Moment } from 'moment/moment';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { CdkDatagridFocusInputDirective } from './mat-datagrid-focus.directives';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgClass, AsyncPipe } from '@angular/common';\n\n// eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'mat-datagrid-datepicker',\n  providers: [\n    DATAGRID_COMMON_PROVIDER,\n    DATAGRID_EDIT_PROVIDER,\n    DATAGRID_FORM_CONTROL_PROVIDER,\n    DATAGRID_STORAGE_PROVIDER,\n  ],\n  template: `\n    @if ((_edit.active$ | async) === true && !_formControl.disabled) {\n      <form\n        novalidate\n        [formGroup]=\"_formControl.formControlGroup\"\n        (ngSubmit)=\"_dateChange(matDatepicker.value); _formControl.errors && tooltip.show()\"\n      >\n        <mat-form-field\n          appearance=\"outline\"\n          #tooltip=\"matTooltip\"\n          [matTooltip]=\"_formControl.errors?.validationMessage\"\n          [matTooltipPosition]=\"'above'\"\n          [matTooltipDisabled]=\"!_formControl.errors\"\n          [matTooltipShowDelay]=\"0\"\n          [matTooltipHideDelay]=\"0\"\n        >\n          <input\n            matInput\n            cdkFocusInput\n            #input\n            #matDatepicker=\"matDatepickerInput\"\n            [placeholder]=\"_storage.placeholder\"\n            [formControlName]=\"_formControl.formControlName\"\n            [matDatepicker]=\"picker\"\n            (dateChange)=\"_dateChange(matDatepicker.value); picker.close()\"\n            [type]=\"_common.type\"\n            [autocomplete]=\"_common.autocomplete\"\n          />\n          @if (_formControl.errors) {\n            <mat-error></mat-error>\n          }\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field>\n      </form>\n    } @else {\n      <div\n        [title]=\"_dateRender\"\n        class=\"cdk-default-field\"\n        [ngClass]=\"{\n          disabled: _formControl.disabled,\n          'mat-red-500 mat-error': _formControl.errors\n        }\"\n      >\n        <span>{{ _dateRender || _storage.placeholder }}</span>\n      </div>\n    }\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatTooltipModule,\n    MatInputModule,\n    CdkDatagridFocusInputDirective,\n    MatDatepickerModule,\n    NgClass,\n    AsyncPipe,\n  ],\n})\nexport class MatDatagridDatepickerComponent<Item> {\n  constructor(\n    private readonly _dateAdapter: CdkDatagridDateAdapter,\n    @Inject(DATAGRID_COMMON_TOKEN)\n    public readonly _common: CdkDatagridCommonDirective,\n    @Inject(DATAGRID_EDIT_TOKEN)\n    public readonly _edit: CdkDatagridEditDirective,\n    @Inject(DATAGRID_FORM_CONTROL_TOKEN)\n    public readonly _formControl: CdkDatagridFormControlDirective<Item>,\n    @Inject(DATAGRID_STORAGE_TOKEN)\n    public readonly _storage: CdkDatagridStorageDirective<Item>,\n  ) {}\n\n  @HostBinding('class.mat-datagrid-datepicker') hostClass = true;\n\n  @Output() dateChange = new EventEmitter<Date | string>();\n\n  /** @internal */\n  _displayDateInput = this._dateAdapter.matDateFormats.display.dateInput;\n\n  /** @internal */\n  _formatDateInput = this._dateAdapter.matFormatDateInput;\n\n  /** @internal */\n  get _controlValue() {\n    return this._formControl?.value;\n  }\n\n  /** @internal */\n  get _dateRender() {\n    return this._dateAdapter.format(this._controlValue, this._displayDateInput);\n  }\n\n  /** @internal */\n  _dateValue(value: Date | Moment | string | unknown) {\n    return this._dateAdapter.format(value, this._formatDateInput);\n  }\n\n  /** @internal */\n  _dateChange(value: unknown) {\n    if (value === null) return;\n\n    this._storage.setValue(this._dateValue(value));\n    this.dateChange.emit(value as Date | string);\n  }\n}\n","import {\n  CdkDatagridDataManager,\n  GlobalRules,\n  ItemActionIndex,\n  ItemActionType,\n  ValueChange,\n} from './cdk-datagrid-data.manager';\nimport { CdkDatagridEditManager } from './cdk-datagrid-edit.manager';\nimport {\n  ChangeDetectorRef,\n  Directive,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { CdkDatagridRuleManager } from './cdk-datagrid-rule.manager';\nimport { setItemPayload } from './cdk-datagrid.utils';\nimport { TableVirtualScrollDataSource } from 'ng-table-virtual-scroll';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n// MDC\nimport { MatTableDataSource } from '@angular/material/table';\n\nexport type Density = 'xs' | 'sm' | 'md' | 'lg';\nexport type CellGap = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'cdk-table[cdk-datagrid]',\n  exportAs: 'cdkDatagrid',\n  standalone: true,\n})\nexport class CdkDatagridDirective<Item> implements OnInit, OnDestroy {\n  constructor(\n    private readonly _cdr: ChangeDetectorRef,\n    private readonly _dataManager: CdkDatagridDataManager<Item>,\n    private readonly _ruleManager: CdkDatagridRuleManager<Item>,\n    private readonly _editManager: CdkDatagridEditManager<HTMLElement>,\n  ) {}\n\n  readonly #unsub = new Subject<void>();\n\n  get countSingleItems() {\n    return this._dataManager.countSingleItems;\n  }\n\n  get countGroupItems() {\n    return this._dataManager.countGroupItems;\n  }\n\n  get items() {\n    return this._dataManager.data;\n  }\n\n  get inCellZone() {\n    return this._editManager.inCellZone;\n  }\n\n  @Output() readonly valueChange = this._dataManager.valueChange$;\n\n  currentValueChange: ValueChange | null = null;\n  readonly #valueChange = this._dataManager.valueChange$.pipe(\n    tap(valueChange => (this.currentValueChange = valueChange)),\n    tap(() => this._cdr.markForCheck()),\n  );\n\n  @HostBinding('class.cdk-datagrid') hostClass = true;\n\n  // @todo: implement this!!!!\n  @Input() density: Density = 'xs';\n  @Input() rowHover = true;\n  @Input() collapsedRows = true;\n  @Input() cellGap: CellGap = 2;\n  @Input() rowGrouping = false;\n  @Input() groupDesign: 'bm' | '' = '';\n\n  @Input() dataSource!: TableVirtualScrollDataSource<Item> | MatTableDataSource<Item>;\n  @Input() set itemRules(rules: GlobalRules<Item>) {\n    this._ruleManager.setGlobalRules(rules);\n  }\n\n  // on click outside of datagrid, the last edited item will be inactivated.\n  // @todo: this breaks the skygrid! Dont know why. But we dont need this because\n  // setting the last item inactive will be made bey see @HostListener('click', ['$event']) click(e: MouseEvent\n  // @HostListener('document:click', ['$event']) documentClick(e: MouseEvent) {\n  //   if (!this._editManager.isInZoneEditItem(e)) {\n  //     this._editManager.setInactiveLastEditItem();\n  //   }\n  // }\n\n  @HostListener('click', ['$event']) click(e: MouseEvent) {\n    this._editManager.setActiveEditItem(e);\n  }\n\n  @HostListener('keydown.tab', ['$event']) tab(e: KeyboardEvent) {\n    this._editManager.setInactiveLastEditItem();\n    e.preventDefault(); // @todo: remove this later when keyboard navigation is implemented!\n  }\n\n  @HostListener('keyup.esc', ['$event']) esc(_e: KeyboardEvent) {\n    // console.log('keyup.esc', e);\n  }\n\n  @HostListener('keydown', ['$event']) arrowKey(_e: KeyboardEvent) {\n    // console.log('keydown', e);\n  }\n\n  @HostListener('keydown.enter', ['$event']) enter(_e: KeyboardEvent) {\n    // console.log('keydown.enter', e);\n  }\n\n  @HostListener('keydown.shift.enter', ['$event']) shiftEnter(_e: KeyboardEvent) {\n    // console.log('keydown.shift.enter', e);\n  }\n\n  @HostListener('keydown.shift.tab', ['$event']) shiftTab(_e: KeyboardEvent) {\n    // console.log('keydown.shift.tab', e);\n  }\n\n  setValue<ItemKey extends keyof Item>(\n    key: ItemKey,\n    value: Item[ItemKey],\n    actionType: ItemActionType,\n    where: 'dataSource' | 'formSource' = 'dataSource',\n  ) {\n    const item = setItemPayload({}, { actionType }) as Item;\n    if (where === 'dataSource') {\n      this._dataManager.setValue(key, value, item);\n    }\n  }\n\n  setValueChange(valueChange: ValueChange | null) {\n    this._dataManager.setValueChange(valueChange);\n  }\n\n  /**\n   * This method is useful when you want to add dynamic a runtime an item to the table.\n   */\n  activeMetaRow(active: boolean, actionType: ItemActionType) {\n    this._dataManager.addDataSlotItem({\n      index: ItemActionIndex.rowGlobal,\n      id: actionType,\n      active,\n      actionType,\n    });\n  }\n\n  ngOnInit() {\n    this._dataManager.dataSource = this.dataSource as MatTableDataSource<Item>;\n    this.#valueChange.pipe(takeUntil(this.#unsub)).subscribe();\n  }\n\n  ngOnDestroy() {\n    this.#unsub.next();\n    this.#unsub.complete();\n    this._dataManager.destroy();\n  }\n}\n","import { Directive, HostBinding } from '@angular/core';\nimport { CdkDatagridDirective } from './cdk-datagrid.directive';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'mat-table[mat-datagrid]',\n  exportAs: 'matDatagrid',\n  standalone: true,\n})\nexport class MatDatagridDirective<Item extends object = object> extends CdkDatagridDirective<Item> {\n  @HostBinding('class.mat-datagrid') override hostClass = true;\n}\n","import { Directive, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\nimport { CdkDatagridDirective } from './cdk-datagrid.directive';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[connectWithDatagrid]',\n  standalone: true,\n})\nexport class CdkDatagridConnectWithDirective<Item> implements OnInit {\n  @Input() connectWithDatagrid: CdkDatagridDirective<Item> | null = null;\n\n  @Output() clickForDatagridItems = new EventEmitter<Item[]>();\n\n  @HostListener('click') clickDatagridAction() {\n    if (this.connectWithDatagrid) {\n      this.clickForDatagridItems.emit(this.connectWithDatagrid.items);\n      this.connectWithDatagrid.setValueChange(null);\n    }\n  }\n\n  ngOnInit() {\n    if (!this.connectWithDatagrid) {\n      throw new Error('[cdk-datagrid-action] must have a [connectWithDatagrid] input');\n    }\n\n    const instanceOfDatagrid = this.connectWithDatagrid instanceof CdkDatagridDirective;\n    if (this.connectWithDatagrid && !instanceOfDatagrid) {\n      throw new Error('[connectWithDatagrid] input must of type CdkDatagridDirective');\n    }\n  }\n}\n","// MDC\nimport {\n  MatAutocompleteSelectedEvent,\n  MatAutocompleteModule,\n} from '@angular/material/autocomplete';\n\nimport { CdkDatagridEditDirective } from './cdk-datagrid-edit.directive';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Inject,\n  Input,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DATAGRID_EDIT_PROVIDER, DATAGRID_EDIT_TOKEN } from './cdk-datagrid-edit.factory';\nimport {\n  DATAGRID_FORM_CONTROL_PROVIDER,\n  DATAGRID_FORM_CONTROL_TOKEN,\n} from './cdk-datagrid-form-control.factory';\nimport { CdkDatagridFormControlDirective } from './cdk-datagrid-form-control.directive';\nimport { merge, of, Subject } from 'rxjs';\nimport { debounceTime, mergeMap, startWith } from 'rxjs/operators';\nimport { DATAGRID_COMMON_PROVIDER, DATAGRID_COMMON_TOKEN } from './cdk-datagrid-common.factory';\nimport { CdkDatagridCommonDirective } from './cdk-datagrid-common.directive';\nimport { DATAGRID_STORAGE_PROVIDER, DATAGRID_STORAGE_TOKEN } from './cdk-datagrid-storage.factory';\nimport { CdkDatagridStorageDirective } from './cdk-datagrid-storage.directive';\nimport { ThemePalette, MatOptionModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CdkDatagridFocusComboboxDirective } from './mat-datagrid-focus.directives';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgClass, AsyncPipe } from '@angular/common';\n\n// eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'mat-datagrid-combobox',\n  providers: [\n    DATAGRID_COMMON_PROVIDER,\n    DATAGRID_EDIT_PROVIDER,\n    DATAGRID_FORM_CONTROL_PROVIDER,\n    DATAGRID_STORAGE_PROVIDER,\n  ],\n  template: `\n    @if ((_edit.active$ | async) === true && !_formControl.disabled) {\n      <form\n        novalidate\n        [formGroup]=\"_formControl.formControlGroup\"\n        (keydown.enter)=\"$event.preventDefault()\"\n        (ngSubmit)=\"_addSelection(input.value)\"\n      >\n        <mat-form-field\n          [appearance]=\"'outline'\"\n          #tooltip=\"matTooltip\"\n          [matTooltip]=\"_formControl.errors?.validationMessage\"\n          [matTooltipPosition]=\"'above'\"\n          [matTooltipDisabled]=\"!_formControl.errors\"\n          [matTooltipShowDelay]=\"0\"\n          [matTooltipHideDelay]=\"0\"\n        >\n          <input\n            matInput\n            cdkFocusCombobox\n            #input\n            [placeholder]=\"_storage.placeholder\"\n            (keyup)=\"_search$.next(input.value)\"\n            [formControlName]=\"_formControl.formControlName\"\n            [title]=\"_renderForDefaultView\"\n            [matAutocomplete]=\"auto\"\n            [autocomplete]=\"autocomplete\"\n            [type]=\"_common.type\"\n          />\n          @if (_formControl.errors) {\n            <mat-error></mat-error>\n          }\n          @if (selectionAdd) {\n            <button\n              matSuffix\n              mat-icon-button\n              aria-label=\"add item button\"\n              class=\"add-item-icon\"\n              (click)=\"_addSelection(input.value.trim()); input.value = ''\"\n              [color]=\"selectionAddIconColor\"\n            >\n              <mat-icon>{{ selectionAddIcon }}</mat-icon>\n            </button>\n          }\n\n          <mat-autocomplete\n            #auto=\"matAutocomplete\"\n            [panelWidth]=\"'auto'\"\n            [displayWith]=\"_displayForAutoCompleteOption.bind(this)\"\n            (optionSelected)=\"\n              _selectionChange($event); input.blur(); _formControl.errors && tooltip.show()\n            \"\n          >\n            @for (option of _filteredOptions$ | async; track option) {\n              <mat-option [value]=\"option\">\n                <div>{{ option[this._storage.renderKey] }}</div>\n              </mat-option>\n            }\n          </mat-autocomplete>\n        </mat-form-field>\n      </form>\n    } @else {\n      <div\n        [title]=\"_renderForDefaultView\"\n        class=\"cdk-default-field\"\n        [ngClass]=\"{\n          disabled: _formControl.disabled,\n          'mat-red-500 mat-error': _formControl.errors\n        }\"\n      >\n        <span>{{ _renderForDefaultView || _storage.placeholder }}</span>\n      </div>\n    }\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatTooltipModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    CdkDatagridFocusComboboxDirective,\n    MatButtonModule,\n    MatIconModule,\n    MatOptionModule,\n    NgClass,\n    AsyncPipe,\n  ],\n})\nexport class MatDatagridComboboxComponent<Item> {\n  constructor(\n    @Inject(DATAGRID_COMMON_TOKEN)\n    public readonly _common: CdkDatagridCommonDirective,\n    @Inject(DATAGRID_EDIT_TOKEN)\n    public readonly _edit: CdkDatagridEditDirective,\n    @Inject(DATAGRID_FORM_CONTROL_TOKEN)\n    public readonly _formControl: CdkDatagridFormControlDirective<Item>,\n    @Inject(DATAGRID_STORAGE_TOKEN)\n    public readonly _storage: CdkDatagridStorageDirective<Item>,\n  ) {}\n\n  @HostBinding('class.mat-datagrid-combobox') hostClass = true;\n\n  @Input() options!: Item[];\n  // @Input() options!: Options[];\n\n  @Output() selectionChange = new EventEmitter<MatAutocompleteSelectedEvent>();\n  @Output() selectionAdded = new EventEmitter<string>();\n\n  @Input() selectionAdd = false;\n  @Input() selectionAddIcon = 'add';\n  @Input() selectionAddIconColor: ThemePalette = 'primary';\n\n  /** @internal */\n  _search$ = new Subject<string>();\n\n  /** @internal */\n  _addedOption$ = new Subject<Item[]>();\n\n  /** @internal */\n  _filteredOptions$ = this._search$.pipe(\n    startWith(''),\n    debounceTime(300),\n    mergeMap(search => merge(of(this._filterOptions(search)), this._addedOption$)),\n  );\n\n  @Input() get autocomplete() {\n    return this._common.autocomplete as unknown as string;\n  }\n\n  /** @internal */\n  _selectChange!: Item;\n\n  /** @internal */\n  _selectionChange(change: MatAutocompleteSelectedEvent) {\n    this._selectChange = change.option.value as Item;\n\n    this._storage.setValue(this._selectChange);\n    this.selectionChange.emit(change);\n  }\n\n  /** @internal */\n  _addSelection(value: string) {\n    if (!value) return;\n\n    this._addedOption$.next([{ [this._storage.key]: value }] as unknown as Item[]);\n    this.selectionAdded.emit(value);\n  }\n\n  /** @internal */\n  _displayForAutoCompleteOption(option: Item) {\n    return option?.[this._storage.renderKey] as unknown as string;\n  }\n\n  /** @internal */\n  get _renderForDefaultView() {\n    const value = this._formControl?.value?.[this._storage.renderKey];\n    return value ? value : this._formControl?.value || '';\n  }\n\n  /** @internal */\n  _filterOptions(search: string) {\n    return (\n      this.options?.filter(option =>\n        (option[this._storage.renderKey] as unknown as string)\n          .toLowerCase()\n          .includes(search.toLowerCase()),\n      ) || []\n    );\n  }\n}\n","import { ChangeDetectionStrategy, Component, HostBinding, ViewEncapsulation } from '@angular/core';\nimport { CdkDatagridCollapseComponent } from './cdk-datagrid-collapse';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NgIf } from '@angular/common';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'mat-datagrid-collapse',\n  template: `\n    <div class=\"cdk-datagrid-collapse\">\n      @if (getActionType === 'row-global') {\n        <div class=\"row-global flex\">\n          <mat-icon class=\"m-auto\">edit_note</mat-icon>\n        </div>\n      }\n      @if (getActionType === 'row-group') {\n        <button (click)=\"collapseChanged()\" mat-icon-button aria-label=\"Collapse this group\">\n          <mat-icon>\n            {{ collapsed ? 'expand_more' : 'expand_less' }}\n          </mat-icon>\n        </button>\n      }\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [NgIf, MatIconModule, MatButtonModule],\n})\nexport class MatDatagridCollapseComponent<Item> extends CdkDatagridCollapseComponent<Item> {\n  @HostBinding('class.mat-datagrid-collapse') override hostClass = true;\n  @HostBinding('class.mat-datagrid-collapsible') override collapsibleClass = true;\n\n  @HostBinding('class.mat-datagrid-collapsed') override get collapsedClass() {\n    return this.collapsed;\n  }\n}\n","import { Directive, HostBinding, Input } from '@angular/core';\nimport { ItemPayload } from './cdk-datagrid-data.manager';\nimport { getItemPayload } from './cdk-datagrid.utils';\n\nconst HOST_CLASS_PREFIX = 'cdk-datagrid';\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[cdk-datagrid-row]',\n  standalone: true,\n})\nexport class MatDatagridRowDirective<Item> {\n  #itemPayload!: ItemPayload<Item>;\n\n  @HostBinding('class') get actionType() {\n    return `${HOST_CLASS_PREFIX}-${this.#itemPayload.actionType} ${HOST_CLASS_PREFIX}-group-id-${this.#itemPayload.groupId} ${HOST_CLASS_PREFIX}-parent-${this.#itemPayload.parent}`;\n  }\n\n  @Input() set item(item: Item) {\n    this.#itemPayload = getItemPayload(item);\n  }\n}\n","import { CdkDatagridStorageDirective } from './cdk-datagrid-storage.directive';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Inject,\n  Injector,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DATAGRID_STORAGE_PROVIDER, DATAGRID_STORAGE_TOKEN } from './cdk-datagrid-storage.factory';\nimport { ComponentPortal, Portal, PortalModule } from '@angular/cdk/portal';\nimport { CdkDatagridRuleManager } from './cdk-datagrid-rule.manager';\nimport { ACTION_DATA } from './mat-datagrid-input';\n\n// eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'mat-datagrid-empty-cell',\n  providers: [DATAGRID_STORAGE_PROVIDER],\n  template: '<ng-template [cdkPortalOutlet]=\"actionPortal\"></ng-template>',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [PortalModule],\n})\nexport class MatDatagridEmptyCellComponent<Item> implements AfterViewInit {\n  constructor(\n    @Inject(DATAGRID_STORAGE_TOKEN)\n    private readonly _storage: CdkDatagridStorageDirective<Item>,\n    private readonly _ruleManager: CdkDatagridRuleManager<Item>,\n    private readonly _injector: Injector,\n    private readonly _cdr: ChangeDetectorRef,\n  ) {}\n\n  actionPortal!: Portal<any>;\n  componentPortal!: ComponentPortal<unknown>;\n\n  @HostBinding('class.mat-datagrid-empty-cell') hostClass = true;\n\n  @Output() inputChange = new EventEmitter<string>();\n\n  ngAfterViewInit() {\n    const { item, key, actionType } = this._storage;\n    const action = this._ruleManager.getActionRule(item, key, actionType);\n\n    const componentType = action?.componentType;\n    if (action && typeof componentType === 'function') {\n      const actionDataInjector = Injector.create({\n        parent: this._injector,\n        providers: [{ provide: ACTION_DATA, useValue: action.data || null }],\n      });\n\n      this.actionPortal = new ComponentPortal(componentType, null, actionDataInjector);\n      this._cdr.markForCheck();\n      this._cdr.detectChanges();\n    }\n  }\n}\n","import { Directive, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n// MDC\nimport { MatTableDataSource } from '@angular/material/table';\n\n// @credits: https://nartc.me/blog/typed-mat-cell-def\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[matCellDef],[cdkCellDef]',\n  standalone: true,\n})\nexport class TypeSafeMatCellDefDirective<T> {\n  @Input() matCellDefType!: T[] | Observable<T[]> | MatTableDataSource<T>;\n\n  static ngTemplateContextGuard<T>(\n    dir: TypeSafeMatCellDefDirective<T>,\n    ctx: unknown,\n  ): ctx is {\n    // @extended from https://material.angular.io/cdk/table/api#CdkCellOutletRowContext\n    $implicit: T;\n    count: number;\n    even: number;\n    first: number;\n    index: number;\n    last: number;\n    odd: number;\n  } {\n    return true;\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["_Validators","i2.CdkDatagridDataManager","i3.CdkDatagridRuleManager","i1.CdkDatagridDataManager","i2.CdkDatagridFormManager","i1.CdkDatagridFormManager","i2.CdkDatagridRuleManager","i1.CdkDatagridEditManager","i1.CdkDatagridRuleManager","i2","i3","i4","i1","i5","i6","i3.CdkDatagridEditManager"],"mappings":"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"}