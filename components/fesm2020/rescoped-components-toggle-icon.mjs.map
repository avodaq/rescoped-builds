{"version":3,"file":"rescoped-components-toggle-icon.mjs","sources":["../../../../libs/components/toggle-icon/src/toggle-icon.component.ts","../../../../libs/components/toggle-icon/src/toggle-icon.component.html","../../../../libs/components/toggle-icon/src/toggle-icon.module.ts","../../../../libs/components/toggle-icon/rescoped-components-toggle-icon.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ThemePalette } from '@angular/material/core';\n\n// MDC\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\n\nexport const CHECKED_ICON = 'bedtime';\nexport const UNCHECKED_ICON = 'wb_sunny';\nexport const CHECKED_CSS_VAR = '--avo-toggle-icon-checked';\nexport const UNCHECKED_CSS_VAR = '--avo-toggle-icon-unchecked';\n/** @internal of angular material */\nexport const TOGGLE_THUMB_SEL = '.mdc-switch__icons';\n\n@Component({\n  selector: 'avo-toggle-icon',\n  templateUrl: './toggle-icon.component.html',\n  styleUrls: ['./toggle-icon.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ToggleIconComponent {\n  /** @internal  */\n  readonly _checked_css_var = CHECKED_CSS_VAR;\n\n  /** @internal  */\n  readonly _unchecked_css_var = UNCHECKED_CSS_VAR;\n\n  /** @internal  */\n  _color: ThemePalette = 'primary';\n\n  /** @internal  */\n  _checked = false;\n\n  constructor(\n    private readonly _cdr: ChangeDetectorRef,\n    private readonly _sanitizer: DomSanitizer,\n  ) {}\n\n  @HostBinding('class')\n  private readonly _hostClass = 'avo-toggle-icon';\n\n  @HostBinding('attr.style')\n  private get _valueAsStyle() {\n    const style = [this._checkedIcon, this._unCheckedIcon];\n    return this._sanitizer.bypassSecurityTrustStyle(style.join(';'));\n  }\n\n  /** Will emit an event when ever the underlying mat-slide-toggle is changed */\n  @Output() readonly changed = new EventEmitter<boolean>();\n\n  /** Material ThemePalette to be used for the underlying mat-slide-toggle */\n  @Input() set color(color: ThemePalette) {\n    this._color = color ? color : this._color;\n  }\n  get color() {\n    return this._color;\n  }\n\n  /** Checked-Icon to be used for the underlying mat-slide-toggle */\n  @Input() checkedIcon = CHECKED_ICON;\n  private readonly _checkedIcon = `${this._checked_css_var}: \"${this.checkedIcon}\"`;\n\n  /** Unchecked-Icon to be used for the underlying mat-slide-toggle */\n  @Input() unCheckedIcon = UNCHECKED_ICON;\n  private readonly _unCheckedIcon = `${this._unchecked_css_var}: \"${this.unCheckedIcon}\"`;\n\n  /** Checked state to be used for the underlying mat-slide-toggle */\n  @Input() set checked(checked: boolean) {\n    this._checked = checked;\n    this._cdr.detectChanges();\n  }\n  get checked() {\n    return this._checked;\n  }\n\n  _toggleChange(event: MatSlideToggleChange) {\n    this.changed.emit(event.checked);\n  }\n}\n","<mat-slide-toggle [color]=\"color\" [checked]=\"_checked\" (change)=\"_toggleChange($event)\">\n</mat-slide-toggle>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToggleIconComponent } from './toggle-icon.component';\n\n// MDC\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\n@NgModule({\n  imports: [CommonModule, MatSlideToggleModule],\n  declarations: [ToggleIconComponent],\n  exports: [ToggleIconComponent],\n})\nexport class ToggleIconModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}